{"ast":null,"code":"var _jsxFileName = \"/home/luisvera/code/labs/phase/Phase_5/cheese-and-crackers/cheese-and-crackers/src/components/GameRenderer.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameRenderer = ({\n  board\n}) => {\n  let renderedBoard = [];\n\n  for (let i = 0; i < board.length; i++) {\n    for (let i = 0; i < board.length; i++) {\n      renderedBoard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"grid-item\",\n        children: board[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 36\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board-frame\",\n    style: {\n      display: 'grid'\n    },\n    class: \"grid-container\",\n    children: renderedBoard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\n\n_c = GameRenderer;\nexport default GameRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameRenderer\");","map":{"version":3,"sources":["/home/luisvera/code/labs/phase/Phase_5/cheese-and-crackers/cheese-and-crackers/src/components/GameRenderer.js"],"names":["React","GameRenderer","board","renderedBoard","i","length","push","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE1B,MAAIC,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClCD,MAAAA,aAAa,CAACG,IAAd,eAAmB;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,kBAAwBJ,KAAK,CAACE,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAnB;AACH;AACJ;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE;AAAV,KAA7B;AAAgD,IAAA,KAAK,EAAC,gBAAtD;AAAA,cAAwEJ;AAAxE;AAAA;AAAA;AAAA;AAAA,UADJ;AAGP,CAZD;;KAAMF,Y;AAcN,eAAeA,YAAf","sourcesContent":["import React from 'react'\n\nconst GameRenderer = ({board}) => {\n\n        let renderedBoard = []\n\n        for (let i = 0; i < board.length; i++){\n            for (let i = 0; i < board.length; i++){\n                renderedBoard.push(<div class=\"grid-item\">{board[i]}</div>)\n            }\n        }\n        return(\n            <div id=\"board-frame\" style={{display: 'grid'}} class=\"grid-container\">{renderedBoard}</div>\n        )\n}\n\nexport default GameRenderer"]},"metadata":{},"sourceType":"module"}